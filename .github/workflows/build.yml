name: Build Multiworld

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: wrapper

      - name: Build Common + Fabric targets (NeoForge excluded)
        run: |
          ./gradlew -PincludeNeo=false --no-daemon --stacktrace \
            :Multiworld-Common:build \
            :Multiworld-Fabric-1.20.1:build \
            :Multiworld-Fabric-1.20.4:build \
            :Multiworld-Fabric-1.20.6:build \
            :Multiworld-Fabric-1.21.1:build \
            :Multiworld-Fabric-1.21.4:build \
            :Multiworld-Fabric-1.21.5:build \
            :Multiworld-Fabric-1.21.9:build \
            :Multiworld-Fabric-bundle:build \
            :Multiworld-Forge-1.20.1:build \
            -x test

      - name: Collect jars
        run: |
          mkdir -p artifacts
          # Gather jars from the root output folder (many subprojects already copy here)
          if [ -d output ]; then
            find output -maxdepth 1 -type f -name '*.jar' -exec cp {} artifacts/ \;
          fi
          # Also gather jars from each subproject's build/libs
          find . -path '*/build/libs/*.jar' \
            -not -name '*-sources.jar' \
            -not -name '*-javadoc.jar' \
            -exec cp {} artifacts/ \;
          ls -l artifacts

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: multiworld-jars
          path: artifacts
          if-no-files-found: error
          retention-days: 14
